{"version":3,"sources":["api/colors.ts","App.tsx","api/cars.ts","index.tsx"],"names":["id","name","carsWithColors","brand","rentPrice","colorId","map","car","carColor","colorsFromServer","find","color","App","newCars","useState","query","setQuery","selectedColorId","setSelectedColorId","formattedQuery","trim","filter","toLowerCase","includes","type","placeholder","value","onChange","event","target","style","ReactDOM","render","document","getElementById"],"mappings":"mOAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,Q,OCkBJC,ECrBE,CACb,CACEF,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,GAAIG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEL,GAAI,GAAIG,MAAO,aAAcC,UAAW,IAAKC,QAAS,IDXbC,KAAI,SAACC,GAChD,IAAMC,EAAWC,EAAiBC,MAAK,SAAAC,GAAK,OAC1CJ,EAAIF,UAAYM,EAAMX,MAGxB,OAAO,2BACFO,GADL,IAEEC,gBAISI,EAAoB,WAC/B,IAAIC,EAAO,YAAOX,GAClB,EAA0BY,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAUA,GAAIH,EAAO,CACT,IAAMI,EAAiBJ,EAAMK,OAE7BP,EAAUA,EAAQQ,QAAO,SAAAd,GAAG,OAC1BA,EAAIJ,MAAMmB,cAAcC,SAASJ,MAUrC,OANIF,IACFJ,EAAUA,EAAQQ,QAAO,SAAAd,GAAG,OAC1BA,EAAIF,UAAYY,MAKlB,gCACE,uBACEO,KAAK,SACLC,YAAY,oBACZC,MAAOX,EACPY,SA5Bc,SAACC,GAAD,OAClBZ,EAASY,EAAMC,OAAOH,UA8BpB,yBACEC,SA5BoB,SAACC,GAAD,OACxBV,GAAoBU,EAAMC,OAAOH,QA0B/B,UAGE,wBACEA,MAAO,EADT,4BAKCjB,EAAiBH,KAAI,SAAAK,GAAK,OACzB,wBAEEe,MAAOf,EAAMX,GAFf,SAIGW,EAAMV,MAHFU,EAAMX,UAQjB,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACGa,EAAQP,KAAI,SAACC,GAAD,eACX,+BACE,6BAAKA,EAAIP,KACT,6BAAKO,EAAIJ,QACT,oBAAI2B,MAAO,CAAEnB,MAAK,UAAEJ,EAAIC,gBAAN,aAAE,EAAcP,MAAlC,mBACGM,EAAIC,gBADP,aACG,EAAcP,OAEjB,6BAAKM,EAAIH,cANFG,EAAIP,gB,ME5FzB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d323aa02.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\ninterface Color {\n  id: number,\n  name: string,\n}\n\ninterface Car {\n  id: number,\n  brand: string,\n  rentPrice: number,\n  colorId: number,\n  carColor?: Color,\n}\n\nexport const carsWithColors = carsFromServer.map((car: Car) => {\n  const carColor = colorsFromServer.find(color => (\n    car.colorId === color.id\n  ));\n\n  return {\n    ...car,\n    carColor,\n  };\n});\n\nexport const App: React.FC<{}> = () => {\n  let newCars = [...carsWithColors];\n  const [query, setQuery] = useState('');\n  const [selectedColorId, setSelectedColorId] = useState(0);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => (\n    setQuery(event.target.value)\n  );\n\n  const handleSelectColor = (event: React.ChangeEvent<HTMLSelectElement>) => (\n    setSelectedColorId(+event.target.value)\n  );\n\n  if (query) {\n    const formattedQuery = query.trim();\n\n    newCars = newCars.filter(car => (\n      car.brand.toLowerCase().includes(formattedQuery)\n    ));\n  }\n\n  if (selectedColorId) {\n    newCars = newCars.filter(car => (\n      car.colorId === selectedColorId\n    ));\n  }\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={handleQuery}\n      />\n\n      <select\n        onChange={handleSelectColor}\n      >\n        <option\n          value={0}\n        >\n          Choose a color\n        </option>\n        {colorsFromServer.map(color => (\n          <option\n            key={color.id}\n            value={color.id}\n          >\n            {color.name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {newCars.map((car) => (\n            <tr key={car.id}>\n              <td>{car.id}</td>\n              <td>{car.brand}</td>\n              <td style={{ color: car.carColor?.name }}>\n                {car.carColor?.name}\n              </td>\n              <td>{car.rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}